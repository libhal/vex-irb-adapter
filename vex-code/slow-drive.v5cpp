{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor29 Motor393A = motor29(Brain.ThreeWirePort.A, false);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Motor declarations (adjust port numbers as needed)\nmotor leftMotor = motor(PORT9, ratio18_1, false);\nmotor rightMotor = motor(PORT10, ratio18_1, true);\n\n// Declare controller\ncontroller controller1;\n\nint main() {\n    // Disable auto control (optional)\n    Brain.Screen.clearScreen();\n    Brain.Screen.print(\"Speed Reduced to 50%\");\n    \n    while (true) {\n        // Get joystick values and halve them\n        int leftY = controller1.Axis3.position() / 5;   // Left joystick Y-axis (forward/backward)\n        int rightX = controller1.Axis1.position() / 5;  // Right joystick X-axis (turning)\n        \n        // Calculate motor speeds\n        int leftSpeed = leftY + rightX;   // Left motor speed\n        int rightSpeed = leftY - rightX;  // Right motor speed\n        \n        // Apply speeds to motors\n        leftMotor.setVelocity(leftSpeed, percent);\n        rightMotor.setVelocity(rightSpeed, percent);\n        \n        // Update motors\n        leftMotor.spin(reverse);\n        rightMotor.spin(reverse);\n        \n        // Small delay to prevent excessive CPU usage\n        wait(20, msec);\n    }\n}\n","textLanguage":"cpp","robotConfig":[{"port":[1],"name":"Motor393A","customName":false,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":4,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.61.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"aiVisionSettings":{"colors":[],"codes":[],"tags":true,"AIObjects":true,"AIObjectModel":[],"aiModelDropDownValue":null}}